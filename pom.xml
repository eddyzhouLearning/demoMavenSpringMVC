<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>cn.zz</groupId>
	<artifactId>demoMavenSpringMVC</artifactId>
	<packaging>war</packaging>
	<version>0.0.1-SNAPSHOT</version>
	<name>demoMavenSpringMVC Maven Webapp</name>
	<url>http://maven.apache.org</url>

	<dependencies>
		<!-- https://mvnrepository.com/artifact/junit/junit -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.springframework/spring-webmvc -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>4.3.9.RELEASE</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.mybatis/mybatis -->
		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis</artifactId>
			<version>3.4.6</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>8.0.12</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.logicalcobwebs/com.springsource.org.logicalcobwebs.proxool -->
		<!-- <dependency> <groupId>org.logicalcobwebs</groupId> <artifactId>com.springsource.org.logicalcobwebs.proxool</artifactId> 
			<version>0.9.1</version> </dependency> -->


		<!-- https://mvnrepository.com/artifact/commons-dbcp/commons-dbcp -->
		<dependency>
			<groupId>commons-dbcp</groupId>
			<artifactId>commons-dbcp</artifactId>
			<version>1.4</version>
		</dependency>


		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis-spring</artifactId>
			<version>1.3.1</version>
		</dependency>


		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
			<version>4.3.9.RELEASE</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/javax.servlet/javax.servlet-api -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>4.0.1</version>
			<scope>compile</scope>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.springframework/spring-jdbc -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>4.3.9.RELEASE</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.hibernate.validator/hibernate-validator -->
		<dependency>
			<groupId>org.hibernate.validator</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>6.0.12.Final</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.glassfish/javax.el -->
		<dependency>
			<groupId>org.glassfish</groupId>
			<artifactId>javax.el</artifactId>
			<version>3.0.0</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.jboss.logging/jboss-logging-processor -->
		<dependency>
			<groupId>org.jboss.logging</groupId>
			<artifactId>jboss-logging-processor</artifactId>
			<version>2.1.0.Final</version>
			<scope>provided</scope>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.jboss.logging/jboss-logging-annotations -->
		<dependency>
			<groupId>org.jboss.logging</groupId>
			<artifactId>jboss-logging-annotations</artifactId>
			<version>2.1.0.Final</version>
			<scope>provided</scope>
		</dependency>

		<!-- https://mvnrepository.com/artifact/javax.servlet.jsp.jstl/jstl-api -->
		<!-- <dependency> <groupId>javax.servlet.jsp.jstl</groupId> <artifactId>jstl-api</artifactId> 
			<version>1.2</version> </dependency> -->

		<!-- https://mvnrepository.com/artifact/jstl/jstl -->
		<dependency>
			<groupId>jstl</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
		</dependency>


	</dependencies>

	<properties>
		<!--工程打包自动添加时间戳后缀 -->
		<maven.build.timestamp.format>yyyyMMddHHmmss</maven.build.timestamp.format>
		<!-- 编译时的编码 -->
		<maven.compiler.encoding>UTF-8</maven.compiler.encoding>
		<!-- 编译源代码 jdk版本编译 -->
		<maven.compiler.source>1.7</maven.compiler.source>
		<!-- 编译源代码 版本 -->
		<maven.compiler.target>1.7</maven.compiler.target>
		<!-- 编译插件版本号控制 -->
		<!-- <maven-eclipse-plugin.version>2.10</maven-eclipse-plugin.version> -->
	</properties>

	<!-- <plugin> 指定maven编译的jdk版本,如果不指定,maven3默认用jdk 1.5 maven2默认用jdk1.3 <groupId>org.apache.maven.plugins</groupId> 
		<artifactId>maven-compiler-plugin</artifactId> <version>3.5.1</version> <configuration> 
		一般而言，target与source是保持一致的，但是，有时候为了让程序能在其他版本的jdk中运行(对于低版本目标jdk，源代码中不能使用低版本jdk中不支持的语法)，会存在target不同于source的情况 
		<source>1.8</source> 源代码使用的JDK版本 <target>1.8</target> 需要生成的目标class文件的编译版本 
		<encoding>UTF-8</encoding>字符集编码 <skipTests>true</skipTests>跳过测试 <verbose>true</verbose> 
		<showWarnings>true</showWarnings> <fork>true</fork>要使compilerVersion标签生效，还需要将fork设为true，用于明确表示编译版本配置的可用 
		<executable>path-to-javac </executable>使用指定的javac命令，例如：<executable>${JAVA_1_4_HOME}/bin/javac</executable> 
		指定插件将使用的编译器的版本 <compilerVersion>1.3</compilerVersion> 编译器使用的初始内存 <meminitial>128m</meminitial> 
		编译器使用的最大内存 <maxmem>512m</maxmem> 这个选项用来传递编译器自身不包含但是却支持的参数选项 <compilerArgument>-verbose 
		-bootclasspath ${java.home}\lib\rt.jar</compilerArgument> </configuration> 
		</plugin> -->

	<build>
		<finalName>demoMavneSpringMVC</finalName>
	</build>
</project>
